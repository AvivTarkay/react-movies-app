{"version":3,"sources":["component/MoviesState.jsx","component/Reusable_components/SiteNavLinks.jsx","component/Reusable_components/SiteNavMenu.jsx","component/movieComponent/SearchNav.jsx","component/Reusable_components/SiteNavigation.jsx","component/Reusable_components/Container.jsx","component/movieComponent/MovieComponent.jsx","component/Reusable_components/Loader.jsx","component/PopularMovies.jsx","component/TvShowsPopular.jsx","component/movieComponent/Pagination.jsx","component/Output.jsx","component/Reusable_components/MySite.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["api_key","process","popularMovies_Api","SearchMovie_Api","SearchTVs_Api","popularTv_Api","movieContext","createContext","MoviesState","children","useState","hiddenMenu","setHiddenMenu","currentPage","setCurrentPage","activeLink","setActiveLink","popularMovies","setPopularMovies","popularTvShow","setPopularTvShow","searchMovie","setSearchMovie","searchTvShow","setSearchTvShow","pageLoading","setPageLoading","showPagination","setShowPagination","trailersKey","setTrailersKey","seriesTrailer","e","a","preventDefault","trim","fetch","searchResponse","json","searchData","results","useEffect","popularMoviesRes","trailerEnd","forEach","movie","id","res","trailer","getPopularMovies","popularTvShowRes","tvShow","getPopularTvShows","setTimeout","clearTimeout","Provider","value","HandleOnSubmit","HandlerOnChange","target","newPage","direction","pageNum","SiteNavLinks","btnText","useContext","onClick","style","color","className","SiteNavMenu","SearchNav","onSubmit","type","placeholder","onChange","SiteNavigation","Container","MovieComp","props","rate","overview","poster_path","title","vote_average","name","console","log","src","alt","href","key","rel","Loader","Popular","length","React","Children","toArray","map","TvPopular","MoviePagination","cursor","background","Output","Pagination","MySite","App","require","config","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6989f8e.chunk.js","sourcesContent":["import React, { useState, createContext, useEffect } from \"react\";\r\nconst api_key = process.env.REACT_APP_API_KEY;\r\nconst popularMovies_Api = `https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=${api_key}&page=`;\r\nconst SearchMovie_Api = `https://api.themoviedb.org/3/search/movie?&api_key=${api_key}&query=`;\r\nconst SearchTVs_Api = `https://api.themoviedb.org/3/search/tv?api_key=${api_key}&&query=`;\r\nconst popularTv_Api = `https://api.themoviedb.org/3/tv/popular?api_key=${api_key}&language=en-US&page=`;\r\n//const latestMovies = `https://api.themoviedb.org/3/movie/latest?api_key=${api_key}&language=en-US`;\r\n//*&append_to_response=videos,images\r\n// const topRatedTv =\r\n// (\"https://api.themoviedb.org/3/tv/top_rated?api_key=1241f3581f3481e4a98c83e83079d1e8&language=en-US&page=1\");\r\n// const upcoming_movies =\r\n// (\"https://api.themoviedb.org/3/movie/upcoming?api_key=1241f3581f3481e4a98c83e83079d1e8&language=en-US&page=1\");\r\n\r\nexport const movieContext = createContext();\r\n\r\nexport const MoviesState = ({ children }) => {\r\n\tconst [hiddenMenu, setHiddenMenu] = useState(true);\r\n\tconst [currentPage, setCurrentPage] = useState(1);\r\n\tconst [activeLink, setActiveLink] = useState(\"Popular-Movies\");\r\n\tconst [popularMovies, setPopularMovies] = useState([]);\r\n\tconst [popularTvShow, setPopularTvShow] = useState([]);\r\n\tconst [searchMovie, setSearchMovie] = useState(\"\");\r\n\tconst [searchTvShow, setSearchTvShow] = useState(\"\");\r\n\tconst [pageLoading, setPageLoading] = useState(true);\r\n\tconst [showPagination, setShowPagination] = useState(true);\r\n\tconst [trailersKey, setTrailersKey] = useState([]);\r\n\tconst [seriesTrailer, setSeriesTrailer] = useState([]);\r\n\r\n\t// const getKeys = async (responseArray, trailerBegin, trailerEnd) => {\r\n\t// \t// const trailers = [];\r\n\t// \tresponseArray.forEach(async (movie, i) => {\r\n\t// \t\tconst res = await (\r\n\t// \t\t\tawait fetch(`${trailerBegin}${movie.id}${trailerEnd}`)\r\n\t// \t\t).json();\r\n\t// \t\tsetPopularMovies(movie => (movie[i].trailer = res.results));\r\n\t// \t\t// trailers.push(res.results[0]);\r\n\t// \t});\r\n\t// \tconsole.log(\"getKeys => movie.trailer\", popularMovies);\r\n\t// \t// return trailers;\r\n\t// };\r\n\tuseEffect(() => {\r\n\t\tconst getPopularMovies = async () => {\r\n\t\t\tconst popularMoviesRes = await (\r\n\t\t\t\tawait fetch(`${popularMovies_Api}${currentPage}`)\r\n\t\t\t).json();\r\n\t\t\t//* custom trailer url\r\n\t\t\tconst trailerBegin = \"https://api.themoviedb.org/3/movie/\";\r\n\t\t\tconst trailerEnd = `/videos?api_key=${api_key}&language=en-US`;\r\n\t\t\t//*\r\n\t\t\t//*getting trailers for movies\r\n\t\t\tpopularMoviesRes.results.forEach(async movie => {\r\n\t\t\t\tconst res = await (\r\n\t\t\t\t\tawait fetch(`${trailerBegin}${movie.id}${trailerEnd}`)\r\n\t\t\t\t).json();\r\n\t\t\t\tmovie.trailer = res.results;\r\n\t\t\t});\r\n\t\t\t//*\r\n\t\t\tif (searchMovie.trim() === \"\") {\r\n\t\t\t\tsetPopularMovies(popularMoviesRes.results);\r\n\t\t\t\tsetShowPagination(true);\r\n\t\t\t}\r\n\t\t};\r\n\t\tgetPopularMovies();\r\n\t}, [searchMovie, currentPage]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getPopularTvShows = async () => {\r\n\t\t\tconst popularTvShowRes = await (\r\n\t\t\t\tawait fetch(`${popularTv_Api}${currentPage}`)\r\n\t\t\t).json();\r\n\r\n\t\t\t//* custom trailer url\r\n\t\t\tconst trailerBegin = \"https://api.themoviedb.org/3/tv/\";\r\n\t\t\tconst trailerEnd = `/season/1/videos?api_key=${api_key}&language=en-US`;\r\n\t\t\t//*\r\n\t\t\t//*getting trailers for tvShows\r\n\t\t\tpopularTvShowRes.results.forEach(async tvShow => {\r\n\t\t\t\tconst res = await (\r\n\t\t\t\t\tawait fetch(`${trailerBegin}${tvShow.id}${trailerEnd}`)\r\n\t\t\t\t).json();\r\n\t\t\t\ttvShow.trailer = res.results;\r\n\t\t\t});\r\n\t\t\t//*\r\n\t\t\tif (searchTvShow.trim() === \"\") {\r\n\t\t\t\tsetPopularTvShow(popularTvShowRes.results);\r\n\t\t\t\tsetShowPagination(true);\r\n\t\t\t}\r\n\t\t};\r\n\t\tgetPopularTvShows();\r\n\t}, [searchTvShow, currentPage]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst pageLoading = setTimeout(() => {\r\n\t\t\tsetPageLoading(false);\r\n\t\t}, 1300);\r\n\t\treturn () => {\r\n\t\t\tclearTimeout(pageLoading);\r\n\t\t};\r\n\t}, [popularMovies, popularTvShow, currentPage]);\r\n\r\n\tasync function HandleOnSubmit(e) {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (searchMovie.trim() === \"\" || searchTvShow.trim() === \"\") return;\r\n\t\tlet searchResponse;\r\n\t\tactiveLink === \"Popular-Movies\"\r\n\t\t\t? (searchResponse = await fetch(`${SearchMovie_Api}${searchMovie}`))\r\n\t\t\t: (searchResponse = await fetch(`${SearchTVs_Api}${searchTvShow}`));\r\n\t\tconst searchData = await searchResponse.json();\r\n\r\n\t\tactiveLink === \"Popular-Movies\"\r\n\t\t\t? setPopularMovies(searchData.results)\r\n\t\t\t: setPopularTvShow(searchData.results);\r\n\t}\r\n\r\n\tfunction HandlerOnChange(e) {\r\n\t\tsetSearchMovie(e.target.value) || setSearchTvShow(e.target.value);\r\n\t}\r\n\r\n\tconst newPage = direction => {\r\n\t\tif (direction === \"next\") {\r\n\t\t\tsetCurrentPage(pageNum => pageNum + 1);\r\n\t\t\tsetPageLoading(true);\r\n\t\t} else if (direction === \"previous\" && currentPage !== 1)\r\n\t\t\tsetCurrentPage(pageNum => pageNum - 1);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<movieContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\thiddenMenu,\r\n\t\t\t\tsetHiddenMenu,\r\n\t\t\t\tactiveLink,\r\n\t\t\t\tsetActiveLink,\r\n\t\t\t\tpopularMovies,\r\n\t\t\t\tcurrentPage,\r\n\t\t\t\tsetCurrentPage,\r\n\t\t\t\tsearchMovie,\r\n\t\t\t\tsearchTvShow,\r\n\t\t\t\tsetSearchMovie,\r\n\t\t\t\tHandleOnSubmit,\r\n\t\t\t\tHandlerOnChange,\r\n\t\t\t\tpopularTvShow,\r\n\t\t\t\tpageLoading,\r\n\t\t\t\tsetPageLoading,\r\n\t\t\t\tshowPagination,\r\n\t\t\t\tsetShowPagination,\r\n\t\t\t\tnewPage,\r\n\t\t\t\ttrailersKey,\r\n\t\t\t\tsetTrailersKey,\r\n\t\t\t\tseriesTrailer,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</movieContext.Provider>\r\n\t);\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { movieContext } from \"../MoviesState\";\r\n\r\nconst SiteNavLinks = ({ btnText }) => {\r\n\tconst { setHiddenMenu, activeLink, setActiveLink } = useContext(movieContext);\r\n\treturn (\r\n\t\t<button\r\n\t\t\tonClick={() => {\r\n\t\t\t\tsetActiveLink(btnText);\r\n\t\t\t\tsetHiddenMenu(true);\r\n\t\t\t}}\r\n\t\t\tstyle={{ color: activeLink === btnText ? \"#024edd\" : \"#fff\" }}\r\n\t\t\tclassName=\"btnStyle\"\r\n\t\t>\r\n\t\t\t{btnText}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default SiteNavLinks;\r\n","import React, { useContext } from \"react\";\r\nimport { movieContext } from \"../MoviesState\";\r\nimport SiteNavLinks from \"./SiteNavLinks\";\r\n\r\nconst SiteNavMenu = () => {\r\n\tconst { hiddenMenu } = useContext(movieContext);\r\n\treturn (\r\n\t\t<div className={(hiddenMenu ? \"hidden\" : \"\") + \"SiteNavMenu\"}>\r\n\t\t\t<SiteNavLinks btnText=\"Popular-Movies\" />\r\n\t\t\t<SiteNavLinks btnText=\"Popular-TvShows\" />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SiteNavMenu;\r\n","import React, { useContext } from \"react\";\r\nimport { movieContext } from \"../MoviesState\";\r\n// import \"./SearchNav.css\";\r\n\r\nexport default function SearchNav() {\r\n\tconst { searchTvShow, HandleOnSubmit, HandlerOnChange } = useContext(\r\n\t\tmovieContext\r\n\t);\r\n\treturn (\r\n\t\t<form onSubmit={HandleOnSubmit} className=\"formSubmit\">\r\n\t\t\t<input\r\n\t\t\t\tclassName=\"searchNav\"\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tplaceholder=\"search...\"\r\n\t\t\t\tvalue={searchTvShow}\r\n\t\t\t\tonChange={HandlerOnChange}\r\n\t\t\t/>\r\n\t\t</form>\r\n\t);\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { movieContext } from \"../MoviesState\";\r\nimport SiteNavMenu from \"./SiteNavMenu\";\r\nimport SearchNav from \"../movieComponent/SearchNav\";\r\n\r\nconst SiteNavigation = () => {\r\n\tconst { hiddenMenu, setHiddenMenu } = useContext(movieContext);\r\n\treturn (\r\n\t\t<nav>\r\n\t\t\t<div className=\"wrapper\">\r\n\t\t\t\t<SiteNavMenu />\r\n\r\n\t\t\t\t<SearchNav />\r\n\t\t\t\t<i\r\n\t\t\t\t\tonClick={() => setHiddenMenu(!hiddenMenu)}\r\n\t\t\t\t\tid=\"burgerMenu\"\r\n\t\t\t\t\tclassName={hiddenMenu ? \"fa fa-bars\" : \"fa fa-times\"}\r\n\t\t\t\t></i>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nexport default SiteNavigation;\r\n","const Container = ({ children }) => <div className=\"container\">{children}</div>;\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\n// import \"./MovieComponent.css\";\r\n\r\nconst Images_Api = \"https://images.tmdb.org/t/p/w1280\";\r\n\r\nfunction voteAvg(rate) {\r\n\tif (rate >= 8) return \"Green\";\r\n\telse if (rate >= 6) return \"Orange\";\r\n\telse return \"Red\";\r\n}\r\n\r\nexport default function MovieComp(props) {\r\n\tconst {\r\n\t\toverview,\r\n\t\t// popularity,\r\n\t\tposter_path,\r\n\t\t// release_date,\r\n\t\ttitle,\r\n\t\tvote_average,\r\n\t\tname,\r\n\t\ttrailer,\r\n\t\t// first_air_date,\r\n\t} = props;\r\n\tconsole.log(trailer);\r\n\treturn (\r\n\t\t<div className=\"movies\">\r\n\t\t\t<img\r\n\t\t\t\tsrc={poster_path ? `${Images_Api}${poster_path}` : \"./defaultIMG.jpeg\"}\r\n\t\t\t\talt={title || name}\r\n\t\t\t\tclassName=\"mainImg\"\r\n\t\t\t/>\r\n\t\t\t<div className=\"movie-info\">\r\n\t\t\t\t<h4>{title || name}</h4>\r\n\t\t\t\t<span className={`tag ${voteAvg(vote_average)}`}>{vote_average}</span>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"movie_review\">\r\n\t\t\t\t<a\r\n\t\t\t\t\thref={`https://www.youtube.com/watch?v=${trailer[0]?.key}`}\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\trel=\"noreferrer\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<img src=\"./youtube.png\" alt=\"Youtube\" className=\"youtube\" />\r\n\t\t\t\t</a>\r\n\r\n\t\t\t\t<p>{overview}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","const Loader = () => {\r\n\treturn (\r\n\t\t<div className=\"loader\">\r\n\t\t\t<img src=\"../loading_12.gif\" alt=\"Loading\" />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useContext } from \"react\";\r\nimport { movieContext } from \"./MoviesState\";\r\nimport Container from \"./Reusable_components/Container\";\r\nimport MovieComp from \"./movieComponent/MovieComponent\";\r\nimport Loader from \"./Reusable_components/Loader\";\r\n\r\nexport default function Popular() {\r\n\tconst { popularMovies, trailersKey, pageLoading } = useContext(movieContext);\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{popularMovies.length === 0 && (\r\n\t\t\t\t<h1 className=\"error\">Results not found</h1>\r\n\t\t\t)}\r\n\t\t\t{!pageLoading ? (\r\n\t\t\t\tpopularMovies.length > 0 &&\r\n\t\t\t\tReact.Children.toArray(\r\n\t\t\t\t\tpopularMovies.map(movie => {\r\n\t\t\t\t\t\treturn <MovieComp {...movie} />;\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t) : (\r\n\t\t\t\t<Loader />\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t);\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { movieContext } from \"./MoviesState\";\r\nimport Container from \"./Reusable_components/Container\";\r\nimport MovieComp from \"./movieComponent/MovieComponent\";\r\nimport Loader from \"./Reusable_components/Loader\";\r\n\r\nexport default function TvPopular() {\r\n\tconst { popularTvShow, pageLoading, seriesTrailer } = useContext(\r\n\t\tmovieContext\r\n\t);\r\n\tconsole.log(\"TvPopular =>seriesTrailer \", seriesTrailer);\r\n\treturn (\r\n\t\t<div className=\"popularTvShows\">\r\n\t\t\t<Container>\r\n\t\t\t\t{popularTvShow.length === 0 && (\r\n\t\t\t\t\t<h1 className=\"error\">Results not found</h1>\r\n\t\t\t\t)}\r\n\t\t\t\t{!pageLoading ? (\r\n\t\t\t\t\tpopularTvShow.length > 0 &&\r\n\t\t\t\t\tReact.Children.toArray(\r\n\t\t\t\t\t\tpopularTvShow.map(tvShow => {\r\n\t\t\t\t\t\t\treturn <MovieComp {...tvShow} />;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t)\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Loader />\r\n\t\t\t\t)}\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { movieContext } from \"../MoviesState\";\r\n// import \"./Pagination.css\";\r\nimport Container from \"../Reusable_components/Container\";\r\n\r\nconst MoviePagination = () => {\r\n\tconst { newPage, currentPage, showPagination } = useContext(movieContext);\r\n\treturn (\r\n\t\t<div className=\"moviePagination\">\r\n\t\t\t{showPagination && (\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"directionBtn\"\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tcursor: currentPage !== 1 ? \"pointer\" : \"not-allowed\",\r\n\t\t\t\t\t\t\tbackground: currentPage !== 1 ? \"#024edd\" : \"#303847\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClick={() => newPage(\"previous\")}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tPrev Page\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button onClick={() => newPage(\"next\")}>Next Page</button>\r\n\t\t\t\t</Container>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MoviePagination;\r\n","import React, { useContext } from \"react\";\r\nimport { movieContext } from \"./MoviesState\";\r\nimport Container from \"../component/Reusable_components/Container\";\r\nimport PopularMovies from \"./PopularMovies\";\r\nimport TvShowsPopular from \"./TvShowsPopular\";\r\nimport Pagination from \"./movieComponent/Pagination\";\r\n\r\nexport default function Output() {\r\n\tconst { activeLink } = useContext(movieContext);\r\n\treturn (\r\n\t\t<div className=\"outputApi\">\r\n\t\t\t{activeLink === \"Popular-Movies\" && (\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<PopularMovies />\r\n\t\t\t\t\t<Pagination />\r\n\t\t\t\t</Container>\r\n\t\t\t)}\r\n\t\t\t{activeLink === \"Popular-TvShows\" && (\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<TvShowsPopular />\r\n\t\t\t\t\t<Pagination />\r\n\t\t\t\t</Container>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import SiteNavigation from \"./SiteNavigation\";\r\nimport Output from \"../Output\";\r\n\r\nconst MySite = () => {\r\n\treturn (\r\n\t\t<section className=\"MySite\">\r\n\t\t\t<SiteNavigation />\r\n\t\t\t<Output />\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default MySite;\r\n","import React from \"react\";\nimport MySite from \"./component/Reusable_components/MySite\";\nimport { MoviesState } from \"./component/MoviesState\";\nimport \"./App.scss\";\nrequire(\"dotenv\").config();\n\nexport default function App() {\n\treturn (\n\t\t<MoviesState>\n\t\t\t<MySite />\n\t\t</MoviesState>\n\t);\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nrequire(\"dotenv\").config();\n/*ReactDOM.render(\n   value,\n   target\n  );*/\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}